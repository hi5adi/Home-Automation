package com.hi5adii.demos;import java.time.Duration;import java.util.ArrayList;import java.util.List;import java.util.Scanner;public class HomeAutomation{    public List<Room> r;    public HomeAutomation() {        this.r = new ArrayList<>();    }    //////////////////////////////////////////add room///////////////////////////////////////////////    public void addRoom(Scanner sc)    {        System.out.println("Enter Name of Room : ");        String rmNm = sc.nextLine();        r.add(new Room(rmNm));        System.out.println("Room " + rmNm + " added");    }    ////////////////////////////////////add device to room////////////////////////////////////////////////    public void addDeviceToRoom(Scanner sc)    {        if (r.isEmpty())        {            System.out.println("No Room, Add Room First");            return;        }        System.out.println("Enter Name of Room : ");        String rmNm = sc.nextLine();        Room selectedRoom = findRoom(rmNm);        if (selectedRoom == null)        {            System.out.println("Room not found");            return;        }        System.out.println("Enter Name of Device :");        String dName = sc.nextLine();        System.out.println("Enter Color :");        String c = sc.nextLine();        System.out.println("Enter Brand :");        String b = sc.nextLine();        System.out.println("Enter Model : ");        String m = sc.nextLine();        Device d = createDevice(dName, c, b, m);        if (d != null)        {            selectedRoom.addDevice(d);            System.out.println("Device " + dName + " added to room " + rmNm);        } else        {            System.out.println("Invalid device");        }    }    ///////////////////////////////find room//////////////////////////////////////////////    private Room findRoom(String rmNm)    {        for (Room ref : r)        {            if (ref.getName().equalsIgnoreCase(rmNm))            {                return ref;            }        }        return null;    }    ///////////////////////////////////turn on////////////////////////////////////////    public void turnOnDevice(Scanner sc)    {        Device d = selectDevice(sc);        if (d != null)        {            d.turnOn();            System.out.println("Device " + d.getName() + " turned ON");        }    }    ////////////////////////////////////turn off/////////////////////////////////    public void turnOffDevice(Scanner sc)    {        Device d = selectDevice(sc);        if (d != null)        {            d.turnOff();            System.out.println("Device " + d.getName() + " turned OFF");        }    }    ////////////////////////check device status////////////////////////////////////////    public void checkDeviceStatus(Scanner sc)    {        Device d = selectDevice(sc);        if (d != null)        {            System.out.println("Device " + d.getName() + " is currently " + (d.isOn() ? "ON" : "OFF"));        }    }    //////////////////////////////duration/////////////////////////////////////    public void getTotalOnDuration(Scanner sc)    {        Device d = selectDevice(sc);        if (d != null)        {            Duration totalOnDuration = d.getTotalOnDuration();            long totalSeconds = totalOnDuration.getSeconds();            long minutes = totalSeconds / 60;            long seconds = totalSeconds % 60;            System.out.println("Total on duration: " + minutes + " minutes and " + seconds + " seconds");        } else        {            System.out.println("Device not found.");        }    }    ///////////////////////////////select device///////////////////////////////////////////    public Device selectDevice(Scanner sc)    {        if (r.isEmpty())        {            System.out.println("No room available. Please add a room first.");            return null;        }        System.out.print("Enter the name of the room: ");        String rmNm = sc.nextLine();        Room selectedRoom = findRoom(rmNm);        if (selectedRoom == null)        {            System.out.println("Room not found.");            return null;        }        System.out.print("Enter the name of the device: ");        String dName = sc.nextLine();        for (Device d : selectedRoom.getDevices())        {            if (d.getName().equalsIgnoreCase(dName))            {                return d;            }        }        System.out.println("Device not found in room.");        return null;    }    //////////////////////////////create device///////////////////////////////////////////    public Device createDevice(String dName, String c, String b, String m)    {        switch (dName.toLowerCase())        {            case "light":                return new Light(dName, false,c, b, m,0,"");            case "air conditioner":                return new AirConditioner(dName, false, c, b, m, 0);            case "tv":                return new Television(dName, false, c, b, m, 0, "");            case "refrigerator":                return new Refrigerator(dName, false, c, b, m, 0);            case "shower":                return new Shower(dName, false, c, b, m, false);            case "fan":                return new Fan(dName, false, c, b, m, 0);            default:                return null;        }    }/////////////////////////////////display///////////////////////////////////////////////////    public void display()    {        if (r.isEmpty())        {            System.out.println("No room available.");            return;        }        for (Room ref : r)        {            System.out.println("Room: " + ref.getName());            List<Device> devices = ref.getDevices();            if (devices.isEmpty())            {                System.out.println("No devices in this room.");            } else            {                System.out.println("Devices:");                for (Device reference : devices)                {                    System.out.println("- " + reference.getName() + ": " + (reference.isOn() ? "ON" : "OFF"));                }            }        }    }}