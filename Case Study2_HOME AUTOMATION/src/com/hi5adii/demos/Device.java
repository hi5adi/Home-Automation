package com.hi5adii.demos;import java.time.Duration;import java.time.LocalTime;public abstract class Device implements Utilizable{    private Duration totalOnDuration;    String name;    boolean on;    String color;    String brand;    String model;    public LocalTime lastOnTime;    public Device(String name, boolean on, String color, String brand, String model) {        this.name = name;        this.on = on;        this.color = color;        this.brand = brand;        this.model = model;        this.lastOnTime = null;        this.totalOnDuration = Duration.ZERO;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    @Override    public void turnOn()    {        if (!isOn()) {            this.on = true;            this.lastOnTime = LocalTime.now();        }    }    @Override    public void turnOff()    {        if (isOn()) {            this.on = false;            if (lastOnTime != null) {                Duration d = Duration.between(lastOnTime, LocalTime.now());                this.totalOnDuration = this.totalOnDuration.plus(d);            }        }    }    public boolean isOn() {        return on;    }    public void setOn(boolean on) {        this.on = on;    }    public String getColor() {        return color;    }    public void setColor(String color) {        this.color = color;    }    public String getBrand() {        return brand;    }    public void setBrand(String brand) {        this.brand = brand;    }    public String getModel() {        return model;    }    public void setModel(String model) {        this.model = model;    }    public Duration getTotalOnDuration()    {        if (isOn())        {            Duration durationSinceLastOn = Duration.between(lastOnTime, LocalTime.now());            totalOnDuration = totalOnDuration.plus(durationSinceLastOn);            lastOnTime = LocalTime.now();        }        return totalOnDuration;    }}